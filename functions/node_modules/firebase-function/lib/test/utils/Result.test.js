"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const src_1 = require("../../src");
const testSrc_1 = require("../../src/testSrc");
describe('Result', () => {
    it('success', () => {
        const result = src_1.Result.success('asdf');
        (0, testSrc_1.expect)(result).to.be.success.equal('asdf');
        (0, testSrc_1.expect)(result.get()).to.be.equal('asdf');
        (0, testSrc_1.expect)(result.value).to.be.equal('asdf');
        (0, testSrc_1.expect)(result.error).to.be.equal(null);
        (0, testSrc_1.expect)(result.valueOrError).to.be.equal('asdf');
        (0, testSrc_1.expect)(result.map(value => `${value}_`)).to.be.success.equal('asdf_');
        (0, testSrc_1.expect)(result.mapError(value => ({
            ...value,
            message: `${value.message}_`
        }))).to.be.success.equal('asdf');
        (0, testSrc_1.expect)(src_1.Result.isSuccess(result)).to.be.equal(true);
        (0, testSrc_1.expect)(src_1.Result.isFailure(result)).to.be.equal(false);
        (0, testSrc_1.expect)(src_1.Result.success()).to.be.success.equal(undefined);
    });
    it('failure', () => {
        const result = src_1.Result.failure({
            name: 'opiu',
            message: 'nrtz'
        });
        (0, testSrc_1.expect)(result).to.be.failure.equal({
            name: 'opiu',
            message: 'nrtz'
        });
        (0, testSrc_1.expect)(() => result.get()).to.throw('nrtz');
        (0, testSrc_1.expect)(result.value).to.be.equal(null);
        (0, testSrc_1.expect)(result.error).to.be.deep.equal({
            name: 'opiu',
            message: 'nrtz'
        });
        (0, testSrc_1.expect)(result.valueOrError).to.be.deep.equal({
            name: 'opiu',
            message: 'nrtz'
        });
        (0, testSrc_1.expect)(result.map(value => `${value}_`)).to.be.failure.equal({
            name: 'opiu',
            message: 'nrtz'
        });
        (0, testSrc_1.expect)(result.mapError(value => ({
            ...value,
            message: `${value.message}_`
        }))).to.be.failure.equal({
            name: 'opiu',
            message: 'nrtz_'
        });
        (0, testSrc_1.expect)(src_1.Result.isSuccess(result)).to.be.equal(false);
        (0, testSrc_1.expect)(src_1.Result.isFailure(result)).to.be.equal(true);
    });
});

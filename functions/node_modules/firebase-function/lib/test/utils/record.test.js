"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const src_1 = require("../../src");
const testSrc_1 = require("../../src/testSrc");
describe('record', () => {
    const record = {
        k1: undefined,
        k2: 0,
        k3: [],
        k4: 'adsf',
        k5: {
            k6: 1
        }
    };
    it('keys', () => {
        (0, testSrc_1.expect)((0, src_1.keys)({})).to.be.deep.equal([]);
        (0, testSrc_1.expect)((0, src_1.keys)(record)).to.be.deep.equal(['k1', 'k2', 'k3', 'k4', 'k5']);
    });
    it('values', () => {
        (0, testSrc_1.expect)((0, src_1.values)({})).to.be.deep.equal([]);
        (0, testSrc_1.expect)((0, src_1.values)(record)).to.be.deep.equal([undefined, 0, [], 'adsf', { k6: 1 }]);
    });
    it('entries', () => {
        (0, testSrc_1.expect)((0, src_1.entries)({})).to.be.deep.equal([]);
        (0, testSrc_1.expect)((0, src_1.entries)(record)).to.be.deep.equal([
            { key: 'k1', value: undefined },
            { key: 'k2', value: 0 },
            { key: 'k3', value: [] },
            { key: 'k4', value: 'adsf' },
            { key: 'k5', value: { k6: 1 } }
        ]);
    });
    it('mapRecord', () => {
        (0, testSrc_1.expect)((0, src_1.mapRecord)({}, () => null)).to.be.deep.equal({});
        (0, testSrc_1.expect)((0, src_1.mapRecord)(record, (value, key) => `${key}: ${JSON.stringify(value)}`)).to.be.deep.equal({
            k1: 'k1: undefined',
            k2: 'k2: 0',
            k3: 'k3: []',
            k4: 'k4: "adsf"',
            k5: 'k5: {"k6":1}'
        });
    });
});

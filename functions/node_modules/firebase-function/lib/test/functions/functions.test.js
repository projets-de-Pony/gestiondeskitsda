"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv = __importStar(require("dotenv"));
const app_1 = require("firebase/app");
const functions_1 = require("firebase/functions");
const src_1 = require("../../src");
const testSrc_1 = require("../../src/testSrc");
describe('functions', () => {
    // eslint-disable-next-line @typescript-eslint/init-declarations
    let functions;
    before(() => {
        dotenv.config({ path: 'test/.env.test' });
        const app = (0, app_1.initializeApp)({
            apiKey: process.env.FIREBASE_API_KEY,
            authDomain: process.env.FIREBASE_AUTH_DOMAIN,
            databaseURL: process.env.FIREBASE_DATABASE_URL,
            projectId: process.env.FIREBASE_PROJECT_ID,
            storageBucket: process.env.FIREBASE_STORAGE_BUCKET,
            messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,
            appId: process.env.FIREBASE_APP_ID
        });
        functions = (0, functions_1.getFunctions)(app, 'europe-west1');
        (0, functions_1.connectFunctionsEmulator)(functions, '127.0.0.1', 5001);
    });
    function createMacTag(parameters, key) {
        const messageAuthenticater = new src_1.HMAC(key);
        const parametersBytesCoder = new src_1.Utf8BytesCoder();
        const jsonString = parameters === undefined ? '' : JSON.stringify(parameters);
        const encodedParameters = parametersBytesCoder.encode(jsonString);
        const rawTag = messageAuthenticater.sign(encodedParameters);
        const macTagByteCoder = new src_1.HexBytesCoder();
        return macTagByteCoder.decode(rawTag);
    }
    it('call a firebase function', async () => {
        const function1 = (0, functions_1.httpsCallable)(functions, 'function1');
        const parameters = {
            v1: 'c',
            v2: [0, 1, 2],
            v3: true
        };
        const result = src_1.Result.from((await function1({
            macTag: createMacTag(parameters, new Uint8Array([1, 2, 3, 4, 5, 6, 7, 8])),
            parameters: parameters
        })).data);
        (0, testSrc_1.expect)(result).to.be.deep.equal(src_1.Result.success({
            v1: 'a c flattened',
            v2: 13
        }));
    });
    it('mac tag not verified', async () => {
        const function1 = (0, functions_1.httpsCallable)(functions, 'function1');
        const parameters = {
            v1: 'c',
            v2: [0, 1, 2],
            v3: true
        };
        const result = src_1.Result.from((await function1({
            macTag: '00ff',
            parameters: parameters
        })).data);
        (0, testSrc_1.expect)(result.state).to.be.equal('failure');
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
        (0, testSrc_1.expect)(result.error.code).to.be.equal('permission-denied');
    });
});

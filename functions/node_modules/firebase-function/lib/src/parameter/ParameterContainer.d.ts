import type { BaseTypeName } from './BaseType';
import type { ILogger } from '../logger';
import type { IParameterBuilder } from './parameterBuilder/IParameterBuilder';
import type { IParameterContainer } from './IParameterContainer';
export declare class ParameterContainer implements IParameterContainer {
    private readonly data;
    private readonly logger;
    constructor(data: Record<string, unknown>, logger: ILogger);
    parameter<TypeName extends BaseTypeName, T>(key: string, builder: IParameterBuilder<TypeName, T>): T;
}

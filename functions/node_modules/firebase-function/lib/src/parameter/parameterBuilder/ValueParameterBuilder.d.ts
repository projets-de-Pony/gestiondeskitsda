import type { BaseType, BaseTypeName } from '../BaseType';
import type { ILogger } from '../../logger';
import type { IParameterBuilder } from './IParameterBuilder';
export declare class ValueParameterBuilder<TypeName extends BaseTypeName> implements IParameterBuilder<TypeName, BaseType<TypeName>> {
    private readonly typeName;
    constructor(typeName: TypeName);
    get expectedTypes(): Set<TypeName>;
    build(value: BaseType<TypeName>, logger: ILogger): BaseType<TypeName>;
}

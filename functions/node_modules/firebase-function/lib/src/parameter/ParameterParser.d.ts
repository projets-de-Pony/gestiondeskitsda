import type { ILogger } from '../logger';
import type { IParameterBuilders } from './IParameterBuilders';
import type { IParameterContainer } from './IParameterContainer';
import type { IParameterParser } from './IParameterParser';
export declare class ParameterParser<Parameters extends Record<string, unknown>> implements IParameterParser<Parameters> {
    private readonly paramterBuilders;
    private readonly logger;
    constructor(paramterBuilders: IParameterBuilders<Parameters>, logger: ILogger);
    parse(container: IParameterContainer): Parameters;
}

"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.execute = exports.verifyMacTag = void 0;
const functions = __importStar(require("firebase-functions"));
const bytesCoder_1 = require("../bytesCoder");
const messageAuthenticator_1 = require("../messageAuthenticator");
const Result_1 = require("./Result");
function verifyMacTag(tag, parameters, key) {
    const messageAuthenticater = new messageAuthenticator_1.HMAC(key);
    const macTagByteCoder = new bytesCoder_1.HexBytesCoder();
    const rawMacTag = macTagByteCoder.encode(tag);
    const parametersBytesCoder = new bytesCoder_1.Utf8BytesCoder();
    const jsonString = parameters === undefined ? '' : JSON.stringify(parameters);
    const encodedParameters = parametersBytesCoder.encode(jsonString);
    return messageAuthenticater.verify(encodedParameters, rawMacTag);
}
exports.verifyMacTag = verifyMacTag;
function isFirebaseErrorCode(code) {
    return [
        'ok', 'cancelled', 'unknown', 'invalid-argument', 'deadline-exceeded', 'not-found', 'already-exists',
        'permission-denied', 'resource-exhausted', 'failed-precondition', 'aborted', 'out-of-range', 'unimplemented',
        'internal', 'unavailable', 'data-loss', 'unauthenticated'
    ].includes(code);
}
function convertToHttpsError(error) {
    let code = 'unknown';
    let message = 'Unknown error occured';
    if (typeof error === 'object' && error !== null) {
        if ('code' in error && typeof error.code === 'string' && isFirebaseErrorCode(error.code))
            code = error.code;
        if ('message' in error && typeof error.message === 'string')
            message = error.message;
    }
    return new functions.https.HttpsError(code, message, error);
}
async function execute(_function) {
    try {
        return await _function()
            .then(value => Result_1.Result.success(value))
            .catch(error => Result_1.Result.failure(convertToHttpsError(error)));
    }
    catch (error) {
        return Result_1.Result.failure(convertToHttpsError(error));
    }
}
exports.execute = execute;

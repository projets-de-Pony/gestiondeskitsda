import type { ITypeBuilder } from './ITypeBuilder';
import type { ILogger } from '../logger';
export declare class ObjectTypeBuilder<V extends {
    [K in keyof T]: unknown;
}, T extends {
    [K in string]: unknown;
}> implements ITypeBuilder<V, T> {
    private readonly builders;
    constructor(builders: {
        [K in keyof T]: ITypeBuilder<V[K], T[K]>;
    });
    build(value: V, logger: ILogger): T;
}

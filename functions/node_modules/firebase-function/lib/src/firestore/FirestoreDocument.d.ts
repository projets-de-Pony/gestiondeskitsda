import type { Firestore } from 'firebase-admin/firestore';
import { FirestoreCollection } from './FirestoreCollection';
import type { FirestorePath } from './FirestorePath';
import { FirestoreSnapshot } from './FirestoreSnapshot';
export declare class FirestoreDocument<Values extends Record<string, any>, SubCollections extends Record<string, FirestoreCollection<any>> = never> {
    private readonly firestore;
    private readonly path;
    constructor(firestore: Firestore, path: FirestorePath);
    collection<Key extends keyof SubCollections & string>(key: Key): SubCollections[Key];
    snapshot(): Promise<FirestoreSnapshot<Values>>;
    set(values: Values): Promise<void>;
    remove(): Promise<void>;
}
export declare namespace FirestoreDocument {
    type ValuesOf<Document extends FirestoreDocument<any, any>> = Document extends FirestoreDocument<infer Values, any> ? Values : never;
    type SubCollectionsOf<Document extends FirestoreDocument<any, any>> = Document extends FirestoreDocument<any, infer SubCollections> ? SubCollections : never;
}

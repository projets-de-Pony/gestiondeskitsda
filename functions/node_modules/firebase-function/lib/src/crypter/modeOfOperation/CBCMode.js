"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CBCMode = void 0;
const crypto_1 = require("crypto");
const xor_1 = require("../xor");
class CBCMode {
    initializationVector = null;
    startEncryption() {
        this.initializationVector = (0, crypto_1.randomBytes)(16);
        return this.initializationVector;
    }
    combineEncryption(block, encrypt) {
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        const encrypted = encrypt((0, xor_1.xor)(this.initializationVector, block));
        this.initializationVector = encrypted;
        return encrypted;
    }
    finishEncryption() {
        this.initializationVector = null;
        return new Uint8Array();
    }
    startDecryption() {
        this.initializationVector = null;
        return new Uint8Array();
    }
    combineDecryption(block, decrypt) {
        if (this.initializationVector === null) {
            this.initializationVector = block;
            return new Uint8Array();
        }
        const decrypted = (0, xor_1.xor)(this.initializationVector, decrypt(block));
        this.initializationVector = block;
        return decrypted;
    }
    finishDecryption() {
        this.initializationVector = null;
        return new Uint8Array();
    }
}
exports.CBCMode = CBCMode;
